  const apiKey = 'IGHgaIQgXa42gv7aa4oV5b4LyVGjCwUh';

// Set initial 'dataset' value.
let dataset = 'LPI';



let popup = new maplibregl.Popup();

// Create an empty GeoJSON FeatureCollection.
const polygonFeature = {
    "type": "FeatureCollection",
    "features": []
};

coordinates =[ [ [ -2.158607182943474, 52.504686972808571 ], [ -2.158576906476549, 52.504869512130924 ], [ -2.15855175682769, 52.505043953471315 ], [ -2.158525143496913, 52.505221093793317 ], [ -2.158502128417647, 52.505374855064751 ], [ -2.158473374818836, 52.505571326907457 ], [ -2.158464712698071, 52.505620334472134 ], [ -2.158485799494025, 52.505747515682529 ], [ -2.158593150067706, 52.505895707480683 ], [ -2.158673395042721, 52.506003929849832 ], 
[ -2.158715294594858, 52.506060510890343 ], [ -2.158840388249157, 52.506225759698388 ], [ -2.158949217726467, 52.506374848177977 ], [ -2.159018077509935, 52.506471398567967 ], [ -2.159032882449209, 52.506491156750471 ], [ -2.158872494851335, 52.506547111587039 ], [ -2.158815844418994, 52.50656696612436 ], [ -2.158733445331185, 52.506596294904369 ], [ -2.158612050752567, 52.50663871173623 ], [ -2.158487710951974, 52.506681581908438 ], [ -2.158387651242428, 52.506716328245702 ], [ -2.158383972848951, 52.506717681701595 ], [ -2.158267727691765, 52.506758293241496 ], [ -2.15814559719522, 52.506801160084876 ], [ -2.158140447099074, 52.50680296501222 ], [ -2.158023464838981, 52.506843577300408 ], 
[ -2.157917519253008, 52.506880578650815 ], [ -2.157882203477572, 52.506892762579326 ], [ -2.157769634212845, 52.506931570687094 ], [ -2.157746090310687, 52.506939693277801 ], [ -2.157623960433161, 52.506983009083164 ], [ -2.15757025228936, 52.50700196007773 ], [ -2.157532141546897, 52.507015406249458 ], [ -2.157496973862225, 52.507027859566676 ], [ -2.157340705435821, 52.507083177505962 ], [ -2.157107484119233, 52.507167096408587 ], [ -2.157159241151068, 52.507220068813695 ], [ -2.157228003008752, 52.507290099643519 ], [ -2.15723687531374, 52.507299077876461 ], [ -2.157279023661504, 52.507343072978131 ], [ -2.157341134869787, 52.50740726907155 ], [ -2.157371453064945, 52.507439143338971 ], 
[ -2.157409905393618, 52.507479547300782 ], [ -2.157480891005105, 52.507553171039675 ], [ -2.157493462949745, 52.507566639344461 ], [ -2.157560010998992, 52.507635324426786 ], [ -2.157605114770797, 52.507681562976472 ], [ -2.157630255574976, 52.507707600554788 ], [ -2.157701241915354, 52.507781224158521 ], [ -2.157716033737971, 52.507797386489813 ], [ -2.15769911132438, 52.507803252687715 ], [ -2.157550437710108, 52.507840760385186 ], [ -2.157373792855187, 52.507884598310042 ], [ -2.157214081491876, 52.507925716355068 ], [ -2.157130908235388, 52.507945605465586 ], [ -2.157118394437625, 52.50794831917537 ], [ -2.157091896715367, 52.507954647558293 ], [ -2.157079384527407, 52.50795781076539 ], [ -2.157055830269362, 52.507963236208752 ], [ -2.157017552166606, 52.507971378292019 ], [ -2.156937314149812, 52.507988116829161 ], [ -2.156861492908194, 52.508003950424367 ], [ -2.156838673663636, 52.508008925342239 ],
[ -2.156815852801893, 52.50801345075427 ], [ -2.156789350162282, 52.508018430565031 ], [ -2.156762845905189, 52.508022960868409 ], [ -2.156740760094357, 52.508027035784316 ], [ -2.156717202536101, 52.508031562157306 ], [ -2.156582477526601, 52.508056014476935 ], [ -2.156561128360492, 52.508060088380255 ], [ -2.156494870804923, 52.508072313002607 ], [ -2.156468364877062, 52.508076393738556 ], [ -2.156441862160926, 52.508081373471455 ], [ -2.1561260070387, 52.508132136845425 ], [ -2.156111276670256, 52.508133055371424 ], [ -2.156078142164474, 52.508137594306163 ], [ -2.156047216084856, 52.50814168080305 ], [ -2.15601555492439, 52.508146217768839 ], [ -2.155987573946179, 52.508149850846607 ], [ -2.155937510220344, 52.508158457686598 ], [ -2.155919839533864, 52.508161178094625 ], [ -2.155901432165767, 52.508163899474816 ], [ -2.155883759872244, 52.508166170376001 ], [ -2.155877869641537, 52.508167077176296 ], [ -2.155860197345543, 52.508169348073963 ], [ -2.155841789970399, 52.508172069444875 ], [ -2.155824854350198, 52.508174339362824 ], [ -2.155807183650491, 52.508177059754033 ], [ -2.1557887762689, 52.508179781116681 ], [ -2.155779940917129, 52.508181141309933 ], [ -2.155762268610522, 52.50818341219297 ], [ -2.155749751459517, 52.508185226755018 ], [ -2.155732079149738, 52.508187497633543 ], [ -2.155711461719531, 52.508190221905402 ], 
[ -2.155693052725871, 52.508192493751714 ], [ -2.155679797288904, 52.508193859778423 ], [ -2.155656971412904, 52.508197036462477 ], [ -2.155544296153565, 52.508207523854104 ], [ -2.155541939800466, 52.508207814647271 ], [ -2.15552588714416, 52.508209795674418 ], [ -2.155508213214258, 52.508211617018048 ], [ -2.1554905408816, 52.508213887860492 ], [ -2.155472131866802, 52.508216159672436 ], [ -2.155454457932157, 52.508217981008045 ], [ -2.155436047315666, 52.508219803312912 ], [ -2.155429420388283, 52.508220711062776 ], [ -2.155391127386213, 52.508224807106579 ], [ -2.155349149377066, 52.508228458493406 ], [ -2.155197433078435, 52.50823989603348 ], [ -2.155142936251041, 52.508244912347998 ], [ -2.155106111778921, 52.508247657855016 ], [ -2.15508769794652, 52.508248581102777 ], [ -2.155070022388696, 52.508249952879488 ], [ -2.155051610148849, 52.508251325623085 ], [ -2.155033196313781, 52.508252248862377 ], [ -2.155022149287545, 52.508253162405715 ], [ -2.155003737044878, 52.508254535141866 ], [ -2.154985323207474, 52.508255458373689 ], [ -2.154966910962709, 52.508256831104099 ], [ -2.154949235397849, 52.508258202862784 ], [ -2.154930821557779, 52.508259126086131 ], [ -2.154912409309798, 52.508260498808063 ], [ -2.154893995468003, 52.508261422025669 ], [ -2.154875583217925, 52.508262794741881 ], [ -2.15486748131796, 52.508263254895638 ],
[ -2.154849067474078, 52.508264178106259 ], [ -2.154830655221458, 52.508265550815473 ], [ -2.154812241375851, 52.508266474020374 ], [ -2.154793829121135, 52.508267846723861 ], [ -2.154776151955028, 52.508268768955212 ], [ -2.154757738106941, 52.508269692151629 ], [ -2.154703971511395, 52.508272909290419 ], [ -2.154587594940776, 52.508278456091645 ], [ -2.154538243643635, 52.508280318850936 ], [ -2.154403454757746, 52.508287238131906 ], [ -2.154315799174567, 52.508290049999943 ], [ -2.154302113978837, 52.508290733189746 ], [ -2.154303040755328, 52.508223540185597 ], [ -2.15426614803645, 52.508206956867923 ], [ -2.154162851106278, 52.508161242719332 ], [ -2.154162093818261, 52.508155400164071 ], [ -2.154143820690955, 52.507987309742312 ], [ -2.154127920970037, 52.507865515076567 ], [ -2.154121824712722, 52.507807986593946 ], [ -2.154119584580202, 52.507799448956469 ], [ -2.154118071613035, 52.507788213346188 ], [ -2.154116568155389, 52.50777967474491 ], [ -2.154114328025313, 52.507771137107298 ], [ -2.154111360731663, 52.507765297442326 ], [ -2.154107658350676, 52.507759908242434 ], [ -2.154102474701875, 52.507752273462074 ], [ -2.154096555966869, 52.507745089146567 ], [ -2.154088435138922, 52.507740155228866 ], [ -2.154081054154054, 52.50773611935017 ], [ -2.154076626197531, 52.507733877623323 ], [ -2.154063347083391, 52.507728500946357 ], [ -2.154049337636682, 52.507724923237227 ], [ -2.154045209420772, 52.507724119528739 ], [ -2.154037543594356, 52.50772287094199 ], [ -2.154033268994777, 52.507722337126658 ], [ -2.154026637044271, 52.507721806393185 ],
[ -2.153694523086426, 52.507715947084634 ], [ -2.153403082659895, 52.50771264100932 ], [ -2.153310966802952, 52.507703680948602 ], [ -2.153134944021217, 52.507686406217083 ], [ -2.153005436248087, 52.507673691717109 ], [ -2.15266258093842, 52.507629545758398 ], [ -2.152661277419712, 52.507720347169318 ], [ -2.152646781139988, 52.507729212183932 ], [ -2.152625683600085, 52.507742113301255 ], [ -2.152606967813882, 52.50775356392797 ], [ -2.152586884693923, 52.507765843409295 ], [ -2.152480340139323, 52.507759778212645 ], [ -2.152478155212527, 52.507766973097681 ], [ -2.152475258703293, 52.507781360960685 ], [ -2.152473790288548, 52.507786999635904 ], [ -2.152472037727388, 52.507787208675836 ], [ -2.152273215800891, 52.507810390518848 ], [ -2.152124761835091, 52.507827663450314 ], [ -2.152057730755644, 52.507829548004835 ], [ -2.152055520733501, 52.507829550857423 ], [ -2.152044469058922, 52.507829115618243 ], [ -2.15203268383801, 52.507829580331837 ], [ -2.152024586678119, 52.50783138879558 ], [ -2.152015016169349, 52.507833199160011 ], [ -2.152006920571562, 52.507835457124074 ], [ -2.151989252898466, 52.50783907594839 ], [ -2.151980420624054, 52.507841334861091 ], [ -2.151924491199408, 52.507858038634403 ], [ -2.151898042786248, 52.507878749903576 ], [ -2.151804734908831, 52.507950790746371 ],
[ -2.151715834308478, 52.508019229810159 ], [ -2.15168798255963, 52.508060170497913 ], [ -2.151680650105245, 52.508070069016895 ], [ -2.151500149958318, 52.508066255754258 ], [ -2.151486151518359, 52.508065824252547 ], [ -2.151473626434612, 52.508065390854703 ], [ -2.151447841147732, 52.508064974503647 ], [ -2.151379323805306, 52.508063264555652 ], [ -2.151315228007372, 52.508061998391888 ], [ -2.151285022586874, 52.508061587682612 ], [ -2.151275444507057, 52.508061240379774 ], [ -2.151272497477423, 52.508061154263423 ], [ -2.151220925238444, 52.508059871966239 ], [ -2.151169449413457, 52.508086458741467 ], [ -2.151041498590985, 52.50815359888886 ], [ -2.150934129456422, 52.508207676926354 ], [ -2.150823073540503, 52.50826086057895 ], [ -2.150800279804203, 52.508273475858047 ], [ -2.150767878152242, 52.508277113359618 ], [ -2.150750205508481, 52.50827938349407 ], [ -2.150731797730154, 52.508282104070027 ],
[ -2.150714125082525, 52.508284374199086 ], 
[ -2.150709706532747, 52.508284829355546 ], [ -2.150691297199481, 52.508287100423679 ], [ -2.150673624547752, 52.508289370546692 ], [ -2.15065521521072, 52.508291641609205 ], [ -2.150636069188271, 52.508293913610878 ], [ -2.15061839653095, 52.508296183725648 ], [ -2.150599988737433, 52.508298904281084 ], [ -2.150564646510952, 52.508304343500235 ], [ -2.150552129083127, 52.508306157512443 ], [ -2.150534457965105, 52.508308877116185 ], [ -2.150516050161084, 52.508311597658583 ],
[ -2.150498377490458, 52.508313867755412 ], [ -2.150480706366014, 52.508316587351132 ], [ -2.150472607486895, 52.508317946207001 ], [ -2.150454936359219, 52.50832066579887 ], [ -2.150437265229358, 52.508323385388096 ], [ -2.150418857413251, 52.508326105915359 ], [ -2.150401187826172, 52.508329275000726 ], [ -2.150383516689528, 52.508331994581923 ], [ -2.150379099678512, 52.508332899227575 ], [ -2.150308421292546, 52.508345575529425 ], [ -2.150275293683695, 52.508352360346748 ], [ -2.150257624075731, 52.508355529410679 ], [ -2.150242164519053, 52.508358695653271 ], [ -2.150206825290718, 52.508365033768577 ], [ -2.150187683848212, 52.508368654202251 ], [ -2.150170015772235, 52.508372272754613 ], [ -2.150152346148691, 52.508375441802805 ], [ -2.150135414752039, 52.508379059410984 ], [ -2.150131734416168, 52.508379963108482 ], [ -2.150091249167582, 52.50838945427197 ], [ -2.150033829400586, 52.508401664012169 ], [ -2.149999972737282, 52.508410697198265 ], [ -2.149983042857484, 52.508414764286144 ], [ -2.149974210345039, 52.508417023048878 ], [ -2.149957280460428, 52.508421090133069 ], [ -2.149921944225589, 52.508428327166314 ], [ -2.149911639877853, 52.508431037301037 ], [ -2.14987778316689, 52.508440070452131 ], [ -2.149860119661827, 52.508445037462756 ], [ -2.149809334558174, 52.508458587163624 ], [ -2.149804182377457, 52.508459942226196 ], 
[ -2.1497533972394, 52.508473491903047 ], [ -2.149744564703392, 52.508475750648628 ], [ -2.149727637855656, 52.508480716702969 ], [ -2.14971144615068, 52.508485232317113 ], [ -2.149694519295565, 52.508490198366736 ], [ -2.149684951606223, 52.508492907545552 ], [ -2.149651094801183, 52.50850194063171 ], [ -2.149634164854069, 52.508506007669645 ], [ -2.149621653487539, 52.508509619589468 ], [ -2.149604726612922, 52.508514585626223 ], [ -2.149588534882889, 52.508519101223527 ], [ -2.149571608000892, 52.508524067255536 ], [ -2.149553945966165, 52.508529483721937 ], [ -2.149537019076279, 52.508534449748986 ], [ -2.149520828870229, 52.508539414838545 ], [ -2.14950390197279, 52.508544380860847 ], [ -2.14946342412589, 52.50855611931695 ], [ -2.149204370920754, 52.508632863313188 ], [ -2.148849637172397, 52.508736248337883 ], [ -2.14881063530467, 52.508748883686877 ], [ -2.148761318209165, 52.508761082547991 ], [ -2.148707810062557, 52.508775678033366 ], [ -2.148636946670939, 52.508795006182481 ], [ -2.148569631422306, 52.508813547679971 ], [ -2.14853782115271, 52.508822308147067 ], [ -2.148473932807322, 52.508839074229087 ], [ -2.148462891314209, 52.50884171324109 ], [ -2.148410966829731, 52.508854122014959 ], [ -2.148407287933806, 52.508855475157823 ], [ -2.148403607514812, 52.508856378799933 ], [ -2.148400663788637, 52.508857281513791 ], [ -2.148396983369361, 52.508858185155681 ], [ -2.148392566256939, 52.508859089725533 ], [ -2.148385202372289, 52.508859998007381 ], [ -2.148306438616602, 52.508878526807756 ], [ -2.148270481520177, 52.508885368553592 ],
    [ -2.148287140030397, 52.508835848358217 ], [ -2.148193502500579, 52.508856589379718 ], [ -2.148009613480902, 52.508897329763222 ], [ -2.147785822413452, 52.50894615704081 ], [ -2.147757819695189, 52.508952458238326 ], [ -2.147496519476965, 52.509011248048004 ], [ -2.147418458498294, 52.509019886323486 ], [ -2.147405202514879, 52.509021251421629 ], [ -2.147386791173348, 52.50902307247199 ], [ -2.14736911652607, 52.5090248925978 ], [ -2.147350705181572, 52.509026713642584 ], [ -2.147341131160863, 52.509027624624679 ], [ -2.147322719814103, 52.509029445665135 ], [ -2.147305043649839, 52.509030816280642 ], [ -2.147286632300297, 52.509032637315514 ], [ -2.147268219437763, 52.509034008846761 ], [ -2.147254961934221, 52.509034924427375 ], [ -2.147236549069773, 52.509036295953692 ], [ -2.147218872900159, 52.509037666556367 ], [ -2.147163634296713, 52.509041781110028 ], [ -2.147143748034524, 52.509043154462859 ], [ -2.147125335163272, 52.509044525971937 ], [ -2.147107658986995, 52.509045896558078 ], [ -2.147089246113507, 52.509047268061558 ], [ -2.14707083172937, 52.509048190061407 ], 
[ -2.147052418853806, 52.509049561559195 ], [ -2.147038424645047, 52.50905047803537 ], [ -2.147001595871262, 52.509052322016437 ], [ -2.146927938314555, 52.50905600994426 ], [ -2.14690657713831, 52.509056935594529 ], [ -2.14686974835374, 52.509058779534655 ], [ -2.146859436112626, 52.509059241895734 ], [ -2.14680418840829, 52.50906065927726 ], [ -2.146791666076969, 52.509061124387081 ], [ -2.146662754750821, 52.509064431496803 ], [ -2.146645075541943, 52.509064903012366 ], [ -2.146626659636252, 52.509065375442418 ], [ -2.146608242225276, 52.509065398368776 ], [ -2.146571410412298, 52.509066343214549 ], [ -2.146552993000881, 52.509066366132309 ], [ -2.146534577093594, 52.509066838548051 ], [ -2.14652278995014, 52.509066853212076 ], [ -2.146485958134121, 52.509067798031296 ], [ -2.146467540722039, 52.509067820935748 ], [ -2.14644912481323, 52.509068293338203 ], [ -2.146402711431316, 52.509067901536675 ], [ -2.146281894708523, 52.509068501153585 ], [ -2.14599532576177, 52.509070654731843 ], [ -2.145705073303276, 52.509072812173322 ], [ -2.145643852724188, 52.509050412755265 ], [ -2.145608785030293, 52.509005865438375 ], [ -2.145573125360063, 52.50896050973688 ], [ -2.145574438856488, 52.508956732289981 ], [ -2.145525951496918, 52.508952926485776 ], [ -2.145482916880234, 52.508949473528709 ], [ -2.145465966931205, 52.508947696453085 ], [ -2.145465234716995, 52.508949045865819 ], [ -2.145369041149883, 52.509043560220597 ], [ -2.145302012245422, 52.509046789452782 ], [ -2.145295677553356, 52.509047066969408 ], [ -2.145504989340119, 52.508586517524961 ],
    [ -2.145562095951413, 52.508391452372734 ], [ -2.145571188906776, 52.508378855038401 ], [ -2.1455766639786, 52.508341719286747 ], [ -2.14558514345334, 52.508233468374613 ], [ -2.14558004802432, 52.508207673174219 ], [ -2.145567739111157, 52.508183684902725 ], [ -2.145549689487956, 52.508161321936569 ], [ -2.145539802052619, 52.508112338276995 ], [ -2.145538981506164, 52.508087167096797 ], [ -2.145540388971483, 52.508067387205031 ], [ -2.145548405583903, 52.508041306097581 ], [ -2.145549810647231, 52.50802080700295 ], [ -2.145545289030956, 52.507990336254949 ], [ -2.145519381286999, 52.507908918236588 ], [ -2.145494744244714, 52.507855098155858 ], [ -2.145493150523342, 52.507818960044283 ], [ -2.145491626569682, 52.507803768708882 ], [ -2.145493000511995, 52.507773919979975 ], [ -2.145468557059226, 52.507689713217211 ], [ -2.145453723307745, 52.507659614802719 ], [ -2.145441061281856, 52.507618006414845 ], [ -2.145439571474868, 52.507613063715993 ], [ -2.14543793373515, 52.50760794139839 ], [ -2.145429645377991, 52.507552392999493 ], [ -2.145424319884458, 52.507501695579215 ], [ -2.145409377599036, 52.507438963337165 ], [ -2.145396834885497, 52.507388904129677 ], [ -2.145385257284803, 52.507363206820024 ], [ -2.14534710402365, 52.507320820776947 ], [ -2.144822487985064, 52.506755362261856 ], [ -2.144714372524757, 52.506629903859043 ], [ -2.144672234115754, 52.506580510235217 ], [ -2.14465994476299, 52.506566590719679 ], [ -2.144644038653889, 52.506523817515131 ], [ -2.14463350285787, 52.506501085572964 ], [ -2.144658530925201, 52.506495570891055 ], [ -2.144676197809997, 52.506491683459465 ], [ -2.144670475567633, 52.506485487339162 ], [ -2.144652540051633, 52.506466090814321 ], [ -2.144583044708534, 52.506390659546447 ], [ -2.144550859237332, 52.50635695931431 ], [ -2.144526864341127, 52.506331843531214 ], [ -2.144458128371935, 52.50626315381075 ], [ -2.144452214363723, 52.506256868014191 ], [ -2.144418952185708, 52.506222746532842 ], [ -2.144414369417287, 52.506218050344678 ], [ -2.144407125678963, 52.506210624437202 ], [ -2.144361298955227, 52.50616393224383 ], [ -2.144344295150188, 52.506145523437361 ], [ -2.144327304725664, 52.506131160144442 ], [ -2.144324352194884, 52.506129365748208 ],
    [ -2.144321399664343, 52.506127571351904 ], [ -2.144316973839063, 52.506125778760889 ], [ -2.144313289116607, 52.506125333772417 ], [ -2.144310342526675, 52.506125337382969 ], [ -2.144306657804323, 52.506124892394276 ], [ -2.144303711214419, 52.506124896004671 ], [ -2.144280135525834, 52.506124025881633 ], [ -2.144165200719328, 52.506118772585481 ], [ -2.143868778693318, 52.506098251126019 ], [ -2.14388784478432, 52.506009280060006 ], [ -2.143426418792783, 52.505972138547378 ], [ -2.143134775507438, 52.50593932899158 ], [ -2.14299845361444, 52.505926458993088 ], [ -2.142903398570357, 52.505918033806104 ], [ -2.142880550841288, 52.505914465499337 ], [ -2.142876866150916, 52.505914020466108 ], [ -2.142873916634294, 52.505913125037253 ], [ -2.142868757185887, 52.505912232289312 ], [ -2.142863599207897, 52.505911789042962 ], [ -2.142853280312022, 52.505910003545964 ], [ -2.142844434704784, 52.505908216261055 ], [ -2.142842958476983, 52.505907319044411 ], [ -2.142840010431465, 52.505906873116523 ], [ -2.142837797559934, 52.505905976793287 ], [ -2.1428341128707, 52.505905531758721 ], [ -2.142830426711671, 52.505904637222216 ], [ -2.14282747866646, 52.505904191294029 ], [ -2.142823793977479, 52.505903746259136 ], [ -2.142817159773819, 52.505902405793861 ], [ -2.142814213198595, 52.505902409367167 ], [ -2.142812001797494, 52.505901962545266 ], [ -2.142809052282995, 52.505901067114806 ], [ -2.142806104238237, 52.505900621186072 ], [ -2.142797258634788, 52.505898833897632 ], [ -2.142783987292166, 52.505895253960091 ], [ -2.142775140221382, 52.505893017168162 ],
    [ -2.142809791322567, 52.505680998238795 ], [ -2.141962412320261, 52.505611837285578 ], [ -2.141640738790608, 52.505585578048859 ], [ -2.141587892880792, 52.50558126343352 ], [ -2.141513531343166, 52.505575185627464 ], [ -2.141501977765998, 52.505574246563157 ], [ -2.141498448261498, 52.50555802372353 ], [ -2.141496203518229, 52.505551823270771 ], [ -2.141533609238078, 52.505392420294186 ], [ -2.141607448857926, 52.505373937836552 ], [ -2.141686805267588, 52.50525309671621 ], [ -2.141381518787077, 52.504790375974359 ], [ -2.140688651825189, 52.503740158247993 ], [ -2.140592533976639, 52.503628796116807 ], [ -2.140446461395425, 52.503330050426015 ], [ -2.140384910306748, 52.503201565741968 ], [ -2.140383431330104, 52.50319976949006 ], [ -2.140395057970569, 52.503150310211261 ], [ -2.140395052190972, 52.503148512202991 ], [ -2.140410911974786, 52.503041061884943 ], [ -2.140414512584918, 52.503015435874687 ], [ -2.140451264311983, 52.502991118838288 ], [ -2.14058947509762, 52.502907346194014 ], [ -2.140783579451925, 52.502796536344597 ], [ -2.141001221790991, 52.502675808906552 ], [ -2.141179887704041, 52.502574905970818 ], 
    [ -2.141209294560759, 52.502557340059973 ], [ -2.14123944088867, 52.502540672262484 ], [ -2.141290920602568, 52.502515438288398 ], [ -2.141318865835715, 52.502501470134646 ], [ -2.141348288588493, 52.502488848712233 ], [ -2.141362264826577, 52.502482988384635 ], [ -2.141374032755926, 52.502477580210538 ], [ -2.141398321198434, 52.502471707497499 ], [ -2.141409359809935, 52.502468547714898 ], [ -2.141419664744049, 52.502466287820106 ], [ -2.141432914567262, 52.502463574883535 ], [ -2.141459420031651, 52.502459947014337 ], [ -2.141592698444772, 52.502446301714663 ], [ -2.141810671015922, 52.502428508764773 ], [ -2.14193939437107, 52.502418554491499 ], [ -2.142275340986452, 52.502392437453793 ], [ -2.142402727727072, 52.502379247863239 ], [ -2.142594763347162, 52.502358877708019 ], [ -2.142672961913092, 52.502350602020307 ], [ -2.142733341277417, 52.502344235796819 ], [ -2.142761352048754, 52.502350494896476 ], 
    [ -2.142790246729512, 52.502356752917706 ], [ -2.14288150058758, 52.502376420402221 ], [ -2.142961370967985, 52.502473865806365 ], [ -2.143106069960684, 52.502798681342028 ], [ -2.143116460297058, 52.502822492418808 ], [ -2.143422851523459, 52.503036982497584 ], [ -2.143508349807554, 52.503053060476944 ], [ -2.14359232620377, 52.503054306623824 ], [ -2.143671139039662, 52.503053311491541 ], [ -2.144004021238959, 52.503034924756982 ], [ -2.144437121762628, 52.503029000321469 ], [ -2.144582179057979, 52.503013089690533 ], [ -2.144648380378507, 52.502985139158881 ], [ -2.144676994454094, 52.5029509417177 ], [ -2.144746464271319, 52.503020259748247 ], [ -2.144776025809837, 52.503049710863287 ], [ -2.144899450311403, 52.50317407163341 ], [ -2.144920881736848, 52.503195171943148 ], [ -2.144931966502186, 52.503205946394296 ], [ -2.144941572110193, 52.503214924649505 ], [ -2.145328825724341, 52.503155112907329 ], [ -2.145350176593223, 52.503151940031628 ], [ -2.145346460706, 52.503142055533104 ], [ -2.14513329670671, 52.502612353365777 ], [ -2.145068991874507, 52.502323851097131 ], [ -2.14500096918837, 52.502024565263802 ], [ -2.145110322335694, 52.501904862526899 ], [ -2.145069652399572, 52.501857265215399 ], [ -2.145135872580714, 52.501835607435453 ], [ -2.145508870401884, 52.501701194990083 ], [ -2.145963535262584, 52.501539709935841 ], 
    [ -2.146151026283213, 52.501474694898668 ], [ -2.146598441391202, 52.501309647328938 ], [ -2.14662279379154, 52.501327624143315 ], [ -2.146625746093847, 52.501329418483714 ], [ -2.146784503664079, 52.50144699076963 ], [ -2.146819206995371, 52.501472119735624 ], [ -2.146909293665923, 52.50153898348993 ], [ -2.147055438734475, 52.501629151399293 ], [ -2.147133426097464, 52.501602533262194 ], [ -2.147224656506541, 52.501571403479893 ], [ -2.147324715027791, 52.501537116056312 ], [ -2.14742403833963, 52.501503278972066 ], [ -2.147532189710935, 52.50146628421794 ], [ -2.147576480798394, 52.501451305195609 ], [ -2.147653585471758, 52.501425227225091 ], [ -2.147717592507457, 52.501403121267401 ], 
    [ -2.147820595014001, 52.501368380226303 ], [ -2.147834573684987, 52.5013635979385 ], [ -2.147910352839395, 52.501337701265371 ], [ -2.148006732029495, 52.501304766395322 ], [ -2.148106789336576, 52.501270478309195 ], [ -2.148211261308477, 52.501234836070715 ], [ -2.148105452547505, 52.501093375406782 ], [ -2.148080299729377, 52.501061042744084 ], [ -2.148054404294458, 52.501026912993325 ], [ -2.147981142159657, 52.500925866659443 ], [ -2.147975961883065, 52.500918681103563 ], [ -2.14802022166703, 52.500894666921184 ], [ -2.148036382902764, 52.500886276843524 ], [ -2.148050932320266, 52.500880432982648 ], [ -2.14807046843127, 52.500876812390779 ], [ -2.148098649463893, 52.500872506669317 ], [ -2.148431280552427, 52.500828944534163 ], [ -2.148500199305905, 52.500822043176541 ], [ -2.148602293863962, 52.500819792747322 ], [ -2.148707176946995, 52.500818815300747 ], [ -2.148734282704161, 52.500818897944946 ], [ -2.150579537230042, 52.500824635397883 ], [ -2.150580076073497, 52.500805728567741 ], [ -2.150598476758176, 52.500806127576162 ], [ -2.150750218641291, 52.500809079992536 ], [ -2.150876905142413, 52.500808468278763 ], [ -2.151002121628741, 52.500808757322062 ], [ -2.151111865727172, 52.500807717571526 ], [ -2.151224554498617, 52.500806224434562 ], [ -2.151273902354709, 52.500805711563672 ], [ -2.151295995994143, 52.500804784178747 ],
    [ -2.151318094301051, 52.500805205295947 ], [ -2.151408794095918, 52.500805088742126 ], [ -2.151432172066623, 52.500804950807328 ], [ -2.151474376173907, 52.500804707747967 ], [ -2.151525123135557, 52.500804103070756 ], [ -2.151529763262555, 52.500804043160898 ], [ -2.151579564591723, 52.500802621579439 ], [ -2.151639219531828, 52.500800746777799 ], [ -2.151672434323147, 52.500799562271737 ], [ -2.151730541766312, 52.500797482644835 ], [ -2.151743061686096, 52.500797017012154 ], [ -2.151821955652761, 52.500795162281804 ], [ -2.151850075236496, 52.500794496727877 ], [ -2.151966020832214, 52.500789159917765 ], [ -2.15206287045324, 52.50078258903681 ], [ -2.15216675155034, 52.50077314115692 ], [ -2.152259363561602, 52.50076378866401 ], [ -2.152268846408549, 52.500762625675129 ], [ -2.152371190237588, 52.50075170522944 ], [ -2.152378552672696, 52.500750796696998 ], [ -2.152484571391236, 52.500737623878535 ], [ -2.152560397508219, 52.500726288090611 ], [ -2.152644319427254, 52.500713143746488 ], [ -2.152737803960969, 52.500696390910505 ], [ -2.152781969041499, 52.500688242559633 ], [ -2.152842325758548, 52.500676477150542 ], [ -2.153063877916697, 52.500633037066578 ], [ -2.153144116737181, 52.500619897153371 ], [ -2.153254541637228, 52.500603121882463 ], [ -2.153359070867462, 52.500585455176157 ], [ -2.153478517797566, 52.500566402448584 ], [ -2.15351609139438, 52.500560626803185 ], [ -2.153517205126739, 52.500563160554925 ], [ -2.153520174922479, 52.500569872276003 ], [ -2.153532648472174, 52.500598174778141 ], [ -2.153577937654974, 52.500700422876093 ],
        [ -2.153599766426979, 52.500749929767018 ], [ -2.153667775347088, 52.500903571469358 ], [ -2.153761475603809, 52.501115705028184 ], [ -2.154274415560566, 52.501072601170407 ], [ -2.15444171008049, 52.501057548315778 ], [ -2.155184519818966, 52.500990674793265 ], [ -2.155235874258538, 52.501057403440072 ], [ -2.155256742016219, 52.501084615887528 ], [ -2.155346282829287, 52.501201818411531 ], [ -2.155350427071029, 52.501207296896297 ], [ -2.155408441770202, 52.501282647161432 ], 
        [ -2.155427683542346, 52.501308243508284 ], [ -2.1554617269778, 52.50135359849893 ], [ -2.155447722622509, 52.501350919955129 ], [ -2.15544182369768, 52.501349129722747 ], [ -2.155419704331389, 52.501342865850681 ], [ -2.15539685319696, 52.501337951452058 ], [ -2.155374746619684, 52.501335283587423 ], [ -2.155343063085113, 52.501332178844066 ], [ -2.155326118864915, 52.501331302178976 ], [ -2.155291305130477, 52.501330332198449 ], [ -2.15523237982175, 52.501330409862682 ], [ -2.155223924773911, 52.501330627776007 ], [ -2.155157786856026, 52.501332333121582 ], [ -2.154995954723417, 52.501338461638937 ], [ -2.154854218375194, 52.501345210805248 ], [ -2.154830006813312, 52.501347148527771 ], [ -2.154798316633068, 52.501350480545753 ], [ -2.154771356702274, 52.501354228874249 ], [ -2.154752482775351, 52.501357544040403 ], [ -2.154730245581171, 52.501363749437473 ], [ -2.154711384752406, 52.501370768493445 ], [ -2.154692529738024, 52.501379432723674 ], [ -2.154676370584543, 52.501388102401165 ], [ -2.154661573959071, 52.50139882002609 ], [ -2.154652164645779, 52.501408298935324 ], [ -2.154642089354833, 52.501421078077982 ], [ -2.15463540659527, 52.501435075417419 ], [ -2.154630724404274, 52.501448252032965 ], [ -2.154628093758345, 52.501470856550696 ], [ -2.154627009769244, 52.501485089272364 ], [ -2.154619804503851, 52.501763755284564 ], [ -2.154615729984504, 52.501861303009669 ], [ -2.154609955932467, 52.502103143755669 ], [ -2.154606781654558, 52.50224698920632 ], [ -2.154605457897374, 52.50228924432033 ], [ -2.154602737263136, 52.502353077459375 ],
        [ -2.154600680093914, 52.502396232543106 ], [ -2.154602313791483, 52.502441630302584 ], [ -2.154601610584032, 52.502451070809329 ], [ -2.15460311554213, 52.502460058914075 ], [ -2.154604609374845, 52.502465900505427 ], [ -2.154609060675351, 52.502474884743165 ], [ -2.154614983559067, 52.502483417545264 ], [ -2.154650493880897, 52.502526972819112 ], [ -2.154669708725223, 52.502544927751536 ], [ -2.154705855538187, 52.50256016342167 ], [ -2.154747147348649, 52.50257224579434 ], [ -2.154778101502719, 52.502577149671865 ], [ -2.154809789067672, 52.502581153569494 ], [ -2.154842206858115, 52.502583358482866 ], [ -2.154866517416902, 52.502584225533752 ], [ -2.154898927250326, 52.502584182922135 ], [ -2.154931329119998, 52.502581892792158 ], [ -2.154962991213167, 52.502578704618479 ], [ -2.154993910341342, 52.502573719397908 ], [ -2.155004216184702, 52.502571907821952 ], [ -2.155107982457368, 52.502545700009144 ], [ -2.155268377945291, 52.502494694759505 ], [ -2.155374943587431, 52.502460382960045 ], [ -2.155422121434662, 52.502437405011932 ], [ -2.155442520354369, 52.502427830632072 ], [ -2.155469184544026, 52.502415317214222 ], [ -2.155530955303767, 52.502386467420543 ], [ -2.155566982346431, 52.502367990185647 ], [ -2.155600058227889, 52.502348168325724 ], [ -2.155609613014948, 52.502342312152791 ], [ -2.155630187748431, 52.502328350348911 ], [ -2.155650762469006, 52.502314388541429 ], [ -2.155669125829303, 52.502299980148472 ], [ -2.155686012812729, 52.502284674695723 ], [ -2.155687479575586, 52.502282874741212 ], [ -2.155700678835481, 52.502266225647823 ], [ -2.155713139903342, 52.502249128024651 ], [ -2.15572191485391, 52.502231136264697 ], [ -2.155722643431627, 52.502228887781499 ], [ -2.155731416773583, 52.502210446518873 ], [ -2.155731362346598, 52.502195163453955 ], [ -2.155736414356342, 52.502165939013565 ], [ -2.155736785002768, 52.502145917614136 ], [ -2.155735651293849, 52.502129548176121 ], [ -2.155734514095989, 52.502112198823866 ], [ -2.155731759471042, 52.502091570230306 ], [ -2.155727979017155, 52.50207245332625 ], [ -2.15574131907762, 52.502095360396602 ], [ -2.155778375407049, 52.50215914097317 ], [ -2.155833205898919, 52.502249868268372 ], [ -2.155862095995536, 52.502295679458733 ], [ -2.155900625832069, 52.502359458045696 ], [ -2.155905813966932, 52.502368441259989 ], [ -2.155741024173387, 52.502426195745784 ], [ -2.15549253432491, 52.502531303379222 ], [ -2.155499851253359, 52.502546531906667 ],
        [ -2.155607464071858, 52.50277338932414 ], [ -2.155728431128886, 52.50302674971779 ], [ -2.155827876421566, 52.503234738549708 ], [ -2.155857989610256, 52.503292864524383 ], [ -2.155867186883768, 52.503310652712202 ], [ -2.155919141496055, 52.503420712425914 ], [ -2.15598267683881, 52.503555839101317 ], [ -2.156043836824073, 52.503685754640841 ], [ -2.156110667275053, 52.503835800407401 ], [ -2.156186380849146, 52.503997970961557 ], [ -2.156274705751347, 52.50418484744872 ], [ -2.156348196206327, 52.504342975305249 ], [ -2.156631043937614, 52.5043390035652 ], [ -2.156908000301567, 52.504335488499407 ], [ -2.157161384909311, 52.504332004232062 ], [ -2.157243142817369, 52.504330097124395 ], [ -2.157324083989147, 52.504510689624169 ], [ -2.157326906103012, 52.504517068810522 ], [ -2.157379045737589, 52.5046362075975 ], [ -2.157381274041174, 52.504641328964873 ], [ -2.15739315736501, 52.504668373222351 ], [ -2.157425812390333, 52.504736024873367 ], [ -2.157428039086247, 52.504740696738075 ], [ -2.15743245882262, 52.504740690832222 ], [ -2.157534110168163, 52.504739835749156 ], [ -2.157646663525476, 52.504738965991542 ], [ -2.157701319632497, 52.504738533241799 ], [ -2.157733877382378, 52.5047382199552 ], [ -2.157858215395914, 52.504736974615227 ], [ -2.157989182681118, 52.504735630354361 ], [ -2.158008481544319, 52.504735424672027 ], [ -2.158104830807904, 52.504735025713209 ],
[ -2.158159487555376, 52.504734772552503 ], [ -2.15823650900737, 52.504726578063533 ], [ -2.158348432659333, 52.504714560788258 ], [ -2.15841499791441, 52.504707459045029 ], [ -2.158439738974352, 52.504704818653899 ], [ -2.158607182943474, 52.504686972808571 ] ], [ [ -2.151462008225976, 52.504220189530393 ], [ -2.151413461667152, 52.504219191113712 ], [ -2.151411305234606, 52.504268630315686 ], [ -2.151458732098846, 52.504269603202772 ],
[ -2.15146025791291, 52.50424651472472 ], [ -2.151462008225976, 52.504220189530393 ] ], [ [ -2.154737543182503, 52.508058811607043 ], [ -2.154736479375823, 52.508049643131464 ], [ -2.154735114216174, 52.508038587136646 ], [ -2.154734467341489, 52.508026496340214 ], [ -2.154731785550034, 52.508026418951765 ], [ -2.154672919092166, 52.508024815106417 ], [ -2.154670474385779, 52.508058432192797 ], [ -2.154671429802133, 52.50806195504645 ], [ -2.154692613538193, 52.508061046206592 ], [ -2.154719719430874, 52.508059922814141 ], [ -2.154731002375033, 52.508059071919597 ], [ -2.154737248288651, 52.508058749063871 ], [ -2.154737543182503, 52.508058811607043 ] ] ] 

//If a property has holes in it or outside of it (ex: a electrical facility that is owned by the local government), we want to work with the largest polygon, which will always be the first polygon listed in the array, so we select coordinates[0]
let outerRing = coordinates[0];
// Define a GeoJSON polygon feature.
let geoJsonPoly = {
    "type": "Feature",
    "geometry": {
        "type": "Polygon",
        "coordinates": [outerRing]
    }
}

// Add event which waits for the map to be loaded.
map.on('load', function() {
    map.addSource("polygon", {
        type: "geojson",
        data: geoJsonPoly
    });

    map.addLayer({
        id: "polygon",
        type: "line",
        source: "polygon",
        paint: {
            "line-color": "#38f",
            "line-opacity": 0.9,
            "line-width": 3
        }
    });

    geoJsonPoly = flipCoords(map.getSource('polygon').serialize().data);
    console.log(geoJsonPoly);
    // Add an empty GeoJSON layer for the addresses and set the 'cluster' option to true.
    map.addSource("addresses", {
        type: "geojson",
        data: geoJson,
        maxzoom: 20,
        cluster: true,
        clusterRadius: 40
    });

    //Create the most outer blue circles pointing to each topographical Feature
    map.addLayer({
        id: "clusters",
        type: "circle",
        source: "addresses",
        filter: [ "has", "point_count" ],
        paint: {
            "circle-radius": 15,
            "circle-color": "#38f"
        }
    });

    //Add numbers to those most outer blue circles representing the number of UPRNs at this particular topographical feature
    map.addLayer({
        id: "cluster-count",
        type: "symbol",
        source: "addresses",
        filter: [ "has", "point_count" ],
        paint: {
            "text-color": "#fff",
        },
        layout: {
            "text-field": "{point_count_abbreviated}",
            "text-font": [ "Source Sans Pro Regular" ],
            "text-size": 12
        }
    });

    //Create smaller circles representing topographical features where number of UPRNs attached to this topographical feature = 1
    map.addLayer({
        id: "unclustered-point",
        type: "circle",
        source: "addresses",
        filter: [ "!", [ "has", "point_count" ] ],
        paint: {
            "circle-radius": 5,
            "circle-color": "#38f",
            "circle-stroke-width": 2,
            "circle-stroke-color": "#fff"
        }
    });

    //Select Features Map Layer
    map.addLayer({
        id: "select_features_polygon",
        type: "fill",
        source: "addresses",
        paint: {
            "fill-color": '#088',
            "fill-opacity": 0.8
        }
    });

    // Add click event handler.
    map.on('click', function(e) {
        let features = map.queryRenderedFeatures(e.point, { layers: [ 'clusters', 'unclustered-point' ] });

        if(! features.length )
            return false;

        let coord = features[0].geometry.coordinates;

        // Construct the popup content based on whether a cluster or single point has been clicked.
        if( features[0].layer.id === 'clusters' ) {
            let clusterId = features[0].properties.cluster_id,
                pointCount = features[0].properties.point_count,
                clusterSource = map.getSource('addresses');

            clusterSource.getClusterLeaves(clusterId, pointCount, 0, function(error, features) {
                let properties = features.map(obj => obj.properties);
                showPopup(properties, coord);
            });
        }
        else {
            showPopup([ features[0].properties ], coord);
        }
    });

    // Use queryRenderedFeatures() to indicate that the features are clickable
    // by changing the cursor style to 'pointer'.
    map.on('mousemove', function(e) {
        let features = map.queryRenderedFeatures(e.point, { layers: [ 'clusters', 'unclustered-point' ] });
        map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';
    });

    getFeatures();
});

/**
 * Get features from the API.
 */
function getFeatures(flip) {
    // Define request parameters.
    const params = {
        key: apiKey,
        dataset: dataset,
        offset: 0,
        output_srs: 'EPSG:4326',
        srs: 'EPSG:4326'
    };

    //arrays for topographical features and TOID for highlighting buildings in the section below
    let TOID_for_highlighting_buildings = [];
    let UPRN_for_highlighting_buildings = [];

    let resultsRemain = true;

    // Use fetch() method to request all addresses (in JSON format).
    //
    // Calls will be made until the number of features returned is less than the
    // requested count, at which point it can be assumed that all features for
    // the query have been returned, and there is no need to request further pages.
    document.getElementById('testPensnett').addEventListener('click', function() {
        function fetchWhile(resultsRemain) {
            if( resultsRemain ) {
                const queryString = Object.keys(params).map(function(key) {
                    return key + '=' + params[key];
                }).join('&');

                fetch('https://api.os.uk/search/places/v1/polygon?' + queryString, { // Inputs OUR Polygon
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(geoJsonPoly)
                })
                .then(response => response.ok ? response.json() : Promise.reject({ err: response.status }))
                .then(data => {
                    if( data.header.totalresults === 0 ) {
                        document.getElementsByClassName('message')[0].style.display = 'inline-block'; //Creates a popup 
                        return;
                    }

                    data.results.forEach(function(val, i) {
                        let type = val.hasOwnProperty('DPA') ? 'DPA' : 'LPI'; //Can ignore this. To do with which UPRN datasets we used. Hardcoded to LPI
                        let result = val[ type ];
                        //Empty map layer as uesual.
                        let feature = {
                            "type": "Feature",
                            "properties": {
                                "DATASET": type,
                                "UPRN": result.UPRN,
                                "ADDRESS": result.ADDRESS
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [ result.LNG, result.LAT ]
                            }
                        };
                        console.log(result);
                        geoJson.features.push(feature);

                        //array of topographical features used for highlighting buildings in the next sction
                        TOID_for_highlighting_buildings.push(result.TOPOGRAPHY_LAYER_TOID);
                        //array of UPRNs created for highlighting buildings in the next section
                        //UPRN_for_highlighting_buildings.push(result.UPRN);
                        
                    });


                        //Pagination
                    params.offset += data.results.length;

                    resultsRemain = data.results.length < 100 ? false : true;

                    fetchWhile(resultsRemain);
                
                })
                .catch(error => console.log(error));
            }
            else {
                map.getSource('addresses').setData(geoJson);

            HighlightBuildings(TOID_for_highlighting_buildings);

            }
        }
        fetchWhile(resultsRemain);
    });
    }

//Highlight Features within Pensnett
function HighlightBuildings(TOID_for_highlighting_buildings){
    //HIGHLIGHTING FEATURES - we get all features within each array
    console.log(TOID_for_highlighting_buildings);

    //there could be several UPRNs refering to the same feature, so many UPRNs referring to same TOID. So, we want only distinct TOIDs.
    function removeDuplicatesFromArray(arr){
        let unique_toid_array = [];
        arr.forEach(element => {
            if (!unique_toid_array.includes(element)){
                unique_toid_array.push(element);
            }
        });
        return unique_toid_array;
    } 
    
    //now we have an array of distinct TOIDS
    unique_toid_array = removeDuplicatesFromArray(TOID_for_highlighting_buildings)
    console.log(unique_toid_array);

    const toidJSON = {
        "type": "FeatureCollection",
        "features": []
    };

    //Maximum number of TOIDs per request
    const maxTOIDsPerRequest = 100;

    //Split the list of TOIDs into smaller arrays
    const dividedTOIDs = [];
    for (let i = 0; i < unique_toid_array.length; i += maxTOIDsPerRequest){
        dividedTOIDs.push(unique_toid_array.slice(i, i+maxTOIDsPerRequest))
    }

    console.log(dividedTOIDs)

    // const result = unique_toid_array.slice(0, 100);

    // console.log(result)
    // let arguments_to_default_url = result.map(element=> `(toid%20=%20%27${element}%27)`).join('or');
    // let default_url = "https://api.os.uk/features/ngd/ofa/v1/collections/bld-fts-buildingpart-1/items?key=IGHgaIQgXa42gv7aa4oV5b4LyVGjCwUh&filter="
    // let final_url_for_highlighting_features = default_url.concat(arguments_to_default_url);
    // console.log(final_url_for_highlighting_features);

    //https://api.os.uk/features/ngd/ofa/v1/collections/bld-fts-buildingpart-1/items?key=IGHgaIQgXa42gv7aa4oV5b4LyVGjCwUh&filter=(toid%20=%20%27osgb1000019311093%27)or(toid%20=%20%27osgb1000019313050%27)
    const fetchPromises = dividedTOIDs.map(subsetTOIDs => {
    let arguments_to_default_url = subsetTOIDs.map(toid=> `(toid=%27${toid}%27)`).join('or');
    let default_url = "https://api.os.uk/features/ngd/ofa/v1/collections/bld-fts-buildingpart-1/items?key=IGHgaIQgXa42gv7aa4oV5b4LyVGjCwUh&filter="
    let final_url_for_highlighting_features = default_url.concat(arguments_to_default_url);
    console.log(final_url_for_highlighting_features);

    fetch(final_url_for_highlighting_features,{
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            key: apiKey
        }
        })
        

    //let's make a fetch query to get polygons from OS NGD API – Features
    // unique_toid_array.forEach(element => {
    //     fetch("https://api.os.uk/features/ngd/ofa/v1/collections/bld-fts-buildingpart-1/items?key=" + apiKey + "&" + "filter=toid%20=%20%27" + element + "%27",{
    //     method: 'GET',
    //     headers: {
    //         'Content-Type': 'application/json',
    //         key: apiKey
    //     }
    //     })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        // Process the response (parse JSON, extract features, etc.)
        const featuresWithinPolygon = data.features;
        console.log(featuresWithinPolygon);

        //toidJSON.features.push(featuresWithinPolygon);
        toidJSON.features = toidJSON.features.concat(featuresWithinPolygon);

        // .push(featuresWithinPolygon.geometry.coordinates) => map.getSource('buildingHighlight')

        // map.addSource("buildingHighlight", {
        //     type: "geojson",
        //     data: toidJSON
        // });

    })
    .catch(error => {
        console.error('There was a problem with the fetch operation:', error);
    });
    // });
    });

    Promise.all(fetchPromises)
    .then(() => {
    console.log(JSON.stringify(toidJSON));

    map.addLayer({
        id: "buildingHighlight",
        type: "fill",
        source: {
            "type": "geojson",
            "data": toidJSON
        },
        paint: {
            "fill-color": "#f50b07"
        }
    });
    })
    .catch(error => {
        console.error('Error in Promise.all:', error);
    });
}   


/**
 * Opens a popup at the defined location, with some basic HTML content for the
 * feature properties.
 */
function showPopup(properties, coord) {
    let total = properties.length;

    const getAddressEntity = function(obj) {
        return `<b>${obj.ADDRESS}</b><br>Dataset: ${obj.DATASET} | UPRN: ${obj.UPRN}`;
    }

    let content = `<div id="popup-body">${getAddressEntity(properties[0])}</div>`;

    if( total > 1 )
        content += `<div id="popup-nav">
        <span>(1 of ${total})</span>
        <a href="#" class="nav next">&#5125;</a><a href="#" class="nav prev">&#5130;</a>
        </div>`;

    popup = new maplibregl.Popup({ maxWidth: 'none' })
        .setLngLat(coord)
        .setHTML(content)
        .addTo(map);

    let navItems = document.querySelectorAll('.nav'),
        counter = 0;

    for( let i = 0; i < navItems.length; i++ ) {
        navItems[i].addEventListener('click', function(event) {
            event.preventDefault();

            this.classList.contains('next') ? counter++ : counter--;
            counter = counter == -1 ? total - 1 : counter % total;

            document.getElementById('popup-body').innerHTML = getAddressEntity(properties[ counter ]);
            document.querySelector('#popup-nav span').innerHTML = `(${counter+1} of ${total})`;
        });
    }
}

/**
 * Takes an input feature and flips the coordinates from [x, y] to [y, x].
 */
function flipCoords(obj) {
    const coords = obj.geometry.coordinates[0];
    coords.forEach(function(val, i) {
        coords[i] = [val[1], val[0]];
    });
    return obj;
}
//Takes in an OUTERring
function getArea(array,geod = geodesic.Geodesic.WGS84) {         //Default projection system.
    //using the geodesic library to calculate the area of the polygon
    //Used this tutorial:
    //https://geographiclib.sourceforge.io/JavaScript/doc/tutorial-3-examples.html
    var p = geod.Polygon(false);
    for (i = 0; i < array.length; ++i)
        p.AddPoint(array[i][0], array[i][1]);
        p = p.Compute(false, true);

    var area = Math.abs(p.area.toFixed(2));
    return area;
}


// ///Highlighting Features
// document.getElementById('highlightFeaturesWithinPensnett').addEventListener('click', function() {
// // Convert polygon coordinates to GeoJSON format
// const polygonGeoJSON = {
//     "type": "Polygon",
//     "coordinates": [coordinates[0]]
// };

// // Define API endpoint and parameters
// const apiEndpointNGDFeatures = "https://api.os.uk/features/ngd/ofa/v1/collections" + "/bld-fts-building-1/items";

// // const featureType = "Building";

// const requestData = {
//     request: "GetFeature",
//     service: "WFS",
//     // typeName: featureType,
//     outputFormat: "json",
//     filter: {
//         geoWithin: {
//             geometry: polygonGeoJSON
//         }
//     }
// };

